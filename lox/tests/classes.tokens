vec![

Token::new( Class, 0, 0 ),
Token::new( Identifier { value: "Breakfast".to_string() }, 0, 6 ),
Token::new( LeftBrace, 0, 16 ),
Token::new( Identifier { value: "init".to_string() }, 1, 4 ),
Token::new( LeftParent, 1, 8 ),
Token::new( Identifier { value: "meat".to_string() }, 1, 9 ),
Token::new( Comma, 1, 13 ),
Token::new( Identifier { value: "bread".to_string() }, 1, 15 ),
Token::new( RightParen, 1, 20 ),
Token::new( LeftBrace, 1, 22 ),
Token::new( This, 2, 8 ),
Token::new( Dot, 2, 12 ),
Token::new( Identifier { value: "meat".to_string() }, 2, 13 ),
Token::new( Equal, 2, 18 ),
Token::new( Identifier { value: "meat".to_string() }, 2, 20 ),
Token::new( Semicolon, 2, 24 ),
Token::new( This, 3, 8 ),
Token::new( Dot, 3, 12 ),
Token::new( Identifier { value: "bread".to_string() }, 3, 13 ),
Token::new( Equal, 3, 19 ),
Token::new( Identifier { value: "bread".to_string() }, 3, 21 ),
Token::new( Semicolon, 3, 26 ),
Token::new( RightBrace, 4, 4 ),
Token::new( Identifier { value: "cook".to_string() }, 6, 4 ),
Token::new( LeftParent, 6, 8 ),
Token::new( RightParen, 6, 9 ),
Token::new( LeftBrace, 6, 11 ),
Token::new( Print, 7, 8 ),
Token::new( StringToken { value: "Eggs a-fryin'!".to_string() }, 7, 14 ),
Token::new( Semicolon, 7, 30 ),
Token::new( RightBrace, 8, 4 ),
Token::new( Identifier { value: "serve".to_string() }, 10, 4 ),
Token::new( LeftParent, 10, 9 ),
Token::new( Identifier { value: "who".to_string() }, 10, 10 ),
Token::new( RightParen, 10, 13 ),
Token::new( LeftBrace, 10, 15 ),
Token::new( Print, 11, 8 ),
Token::new( StringToken { value: "Enjoy your ".to_string() }, 11, 14 ),
Token::new( Plus, 11, 28 ),
Token::new( This, 11, 30 ),
Token::new( Dot, 11, 34 ),
Token::new( Identifier { value: "meat".to_string() }, 11, 35 ),
Token::new( Plus, 11, 40 ),
Token::new( StringToken { value: " and ".to_string() }, 11, 42 ),
Token::new( Plus, 11, 50 ),
Token::new( This, 11, 52 ),
Token::new( Dot, 11, 56 ),
Token::new( Identifier { value: "bread".to_string() }, 11, 57 ),
Token::new( Plus, 11, 63 ),
Token::new( StringToken { value: ", ".to_string() }, 11, 65 ),
Token::new( Plus, 11, 70 ),
Token::new( Identifier { value: "who".to_string() }, 11, 72 ),
Token::new( Plus, 11, 76 ),
Token::new( StringToken { value: ".".to_string() }, 11, 78 ),
Token::new( Semicolon, 11, 81 ),
Token::new( RightBrace, 12, 4 ),
Token::new( RightBrace, 13, 0 ),
Token::new( Var, 16, 0 ),
Token::new( Identifier { value: "someVariable".to_string() }, 16, 4 ),
Token::new( Equal, 16, 17 ),
Token::new( Identifier { value: "Breakfast".to_string() }, 16, 19 ),
Token::new( Semicolon, 16, 28 ),
Token::new( Identifier { value: "someFunction".to_string() }, 19, 0 ),
Token::new( LeftParent, 19, 12 ),
Token::new( Identifier { value: "Breakfast".to_string() }, 19, 13 ),
Token::new( RightParen, 19, 22 ),
Token::new( Semicolon, 19, 23 ),
Token::new( Var, 21, 0 ),
Token::new( Identifier { value: "breakfast".to_string() }, 21, 4 ),
Token::new( Equal, 21, 14 ),
Token::new( Identifier { value: "Breakfast".to_string() }, 21, 16 ),
Token::new( LeftParent, 21, 25 ),
Token::new( StringToken { value: "bacon".to_string() }, 21, 26 ),
Token::new( Comma, 21, 33 ),
Token::new( StringToken { value: "toast".to_string() }, 21, 35 ),
Token::new( RightParen, 21, 42 ),
Token::new( Semicolon, 21, 43 ),
Token::new( Print, 22, 0 ),
Token::new( Identifier { value: "breakfast".to_string() }, 22, 6 ),
Token::new( Semicolon, 22, 15 ),
Token::new( Identifier { value: "breakfast".to_string() }, 23, 0 ),
Token::new( Dot, 23, 9 ),
Token::new( Identifier { value: "serve".to_string() }, 23, 10 ),
Token::new( LeftParent, 23, 15 ),
Token::new( StringToken { value: "Dear reader".to_string() }, 23, 16 ),
Token::new( RightParen, 23, 29 ),
Token::new( Semicolon, 23, 30 ),
Token::new( Class, 26, 0 ),
Token::new( Identifier { value: "Brunch".to_string() }, 26, 6 ),
Token::new( Less, 26, 13 ),
Token::new( Identifier { value: "Breakfast".to_string() }, 26, 15 ),
Token::new( LeftBrace, 26, 25 ),
Token::new( Identifier { value: "init".to_string() }, 27, 4 ),
Token::new( LeftParent, 27, 8 ),
Token::new( Identifier { value: "meat".to_string() }, 27, 9 ),
Token::new( Comma, 27, 13 ),
Token::new( Identifier { value: "bread".to_string() }, 27, 15 ),
Token::new( Comma, 27, 20 ),
Token::new( Identifier { value: "drink".to_string() }, 27, 22 ),
Token::new( RightParen, 27, 27 ),
Token::new( LeftBrace, 27, 29 ),
Token::new( Super, 28, 8 ),
Token::new( LeftParent, 28, 13 ),
Token::new( Identifier { value: "meat".to_string() }, 28, 14 ),
Token::new( Comma, 28, 18 ),
Token::new( Identifier { value: "bread".to_string() }, 28, 20 ),
Token::new( RightParen, 28, 25 ),
Token::new( Semicolon, 28, 26 ),
Token::new( This, 29, 8 ),
Token::new( Dot, 29, 12 ),
Token::new( Identifier { value: "drink".to_string() }, 29, 13 ),
Token::new( Equal, 29, 19 ),
Token::new( Identifier { value: "drink".to_string() }, 29, 21 ),
Token::new( Semicolon, 29, 26 ),
Token::new( RightBrace, 30, 4 ),
Token::new( Identifier { value: "drink".to_string() }, 32, 4 ),
Token::new( LeftParent, 32, 9 ),
Token::new( RightParen, 32, 10 ),
Token::new( LeftBrace, 32, 12 ),
Token::new( Print, 33, 8 ),
Token::new( StringToken { value: "How about a ".to_string() }, 33, 14 ),
Token::new( Plus, 33, 29 ),
Token::new( This, 33, 31 ),
Token::new( Dot, 33, 35 ),
Token::new( Identifier { value: "drink".to_string() }, 33, 36 ),
Token::new( Plus, 33, 42 ),
Token::new( StringToken { value: "?".to_string() }, 33, 44 ),
Token::new( Semicolon, 33, 47 ),
Token::new( RightBrace, 34, 4 ),
Token::new( RightBrace, 35, 0 ),
Token::new( Var, 38, 0 ),
Token::new( Identifier { value: "benedict".to_string() }, 38, 4 ),
Token::new( Equal, 38, 13 ),
Token::new( Identifier { value: "Brunch".to_string() }, 38, 15 ),
Token::new( LeftParent, 38, 21 ),
Token::new( StringToken { value: "ham".to_string() }, 38, 22 ),
Token::new( Comma, 38, 27 ),
Token::new( StringToken { value: "English muffin".to_string() }, 38, 29 ),
Token::new( RightParen, 38, 45 ),
Token::new( Semicolon, 38, 46 ),
Token::new( Identifier { value: "benedict".to_string() }, 39, 0 ),
Token::new( Dot, 39, 8 ),
Token::new( Identifier { value: "serve".to_string() }, 39, 9 ),
Token::new( LeftParent, 39, 14 ),
Token::new( StringToken { value: "Noble Reader".to_string() }, 39, 15 ),
Token::new( RightParen, 39, 29 ),
Token::new( Semicolon, 39, 30 ),

]
